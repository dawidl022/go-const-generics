@book{tapl,
  author    = {Pierce, Benjamin C.},
  title     = {Types and Programming Languages},
  year      = {2002},
  isbn      = {0262162091},
  publisher = {The MIT Press},
  edition   = {1},
  abstract  = {A type system is a syntactic method for automatically checking the absence of certain erroneous behaviors by classifying program phrases according to the kinds of values they compute. The study of type systems -- and of programming languages from a type-theoretic perspective -- has important applications in software engineering, language design, high-performance compilers, and security.This text provides a comprehensive introduction both to type systems in computer science and to the basic theory of programming languages. The approach is pragmatic and operational; each new concept is motivated by programming examples and the more theoretical sections are driven by the needs of implementations. Each chapter is accompanied by numerous exercises and solutions, as well as a running implementation, available via the Web. Dependencies between chapters are explicitly identified, allowing readers to choose a variety of paths through the material.The core topics include the untyped lambda-calculus, simple type systems, type reconstruction, universal and existential polymorphism, subtyping, bounded quantification, recursive types, kinds, and type operators. Extended case studies develop a variety of approaches to modeling the features of object-oriented languages.}
}
@article{fg,
  author     = {Griesemer, Robert and Hu, Raymond and Kokke, Wen and Lange, Julien and Taylor, Ian Lance and Toninho, Bernardo and Wadler, Philip and Yoshida, Nobuko},
  title      = {Featherweight {Go}},
  year       = {2020},
  issue_date = {November 2020},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {4},
  number     = {OOPSLA},
  url        = {https://doi.org/10.1145/3428217},
  doi        = {10.1145/3428217},
  abstract   = {We describe a design for generics in Go inspired by previous work on Featherweight Java by Igarashi, Pierce, and Wadler. Whereas subtyping in Java is nominal, in Go it is structural, and whereas generics in Java are defined via erasure, in Go we use monomorphisation. Although monomorphisation is widely used, we are one of the first to formalise it. Our design also supports a solution to The Expression Problem.},
  journal    = {{Proc. ACM Program. Lang.}},
  month      = {11},
  articleno  = {149},
  numpages   = {29},
  keywords   = {Go, Monomorphisation, Generics}
}
@online{rustConstBlog,
  author       = {{The const generics project group}},
  title        = {Const generics {MVP} hits beta!},
  organization = {Rust Blog},
  url          = {https://blog.rust-lang.org/2021/02/26/const-generics-mvp-beta.html},
  year         = {2021},
  month        = {11},
  day          = {26},
  urldate      = {2023-11-12}
}
@online{genericsProposal,
  title        = {Type Parameters Proposal},
  author       = {Taylor, Ian Lance and Griesemer, Robert},
  organization = {Google Open Source},
  url          = {https://go.googlesource.com/proposal/+/HEAD/design/43651-type-parameters.md},
  year         = {2021},
  month        = {11},
  day          = {20},
  urldate      = {2023-11-16}
}
@online{spec,
  title        = {The {Go} Programming Language Specification},
  organization = {Google Open Source},
  url          = {https://go.dev/ref/spec},
  year         = {2023},
  month        = {8},
  day          = {2},
  urldate      = {2023-11-16}
}

@online{javaSpec,
  title        = {The {Java}\textsuperscript{\textregistered} Language Specification},
  author       = {Gosling, James
                  and Joy, Bill
                  and Steele, Guy
                  and Bracha, Gilad
                  and Buckley, Alex
                  and Smith, Daniel
                  and Bierman, Gavin},
  organization = {Oracle},
  edition      = {Java SE 21 Edition},
  url          = {https://docs.oracle.com/javase/specs/jls/se21/html/index.html},
  year         = {2023},
  month        = {08},
  day          = {23},
  urldate      = {2023-11-23}
}
